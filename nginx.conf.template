
user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '${DOLLAR}remote_addr - ${DOLLAR}remote_user [${DOLLAR}time_local] "${DOLLAR}request" '
                      '${DOLLAR}status ${DOLLAR}body_bytes_sent "${DOLLAR}http_referer" '
                      '"${DOLLAR}http_user_agent" "${DOLLAR}http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream api {
	server ${SUT_API_LOCAL};
    }

    upstream auth {
	server ${SUT_AUTH_LOCAL};
    }

    server {
	# Redirects all methods, but does not
	# handle request body in any way. POSTs, etc.
	# should be made to https
    	listen 80 default_server;
	# ipv6
	listen [::]:80 default_server;

	# unused
	server_name _;

	# Permanent redirect, meaning that the user-agent
	# only needs to be told once and will "remember"
	# this and handle the redirect client-side.
	return ${REDIRECT_HTTP_CODE} https://${DOLLAR}host${DOLLAR}request_uri;

    }

    server {

	### TLS configuration

	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;
	server_name localhost;
	root /usr/share/nginx/html;

	### keys generated by certbot/letsencrypt via instructions here:
        ### https://letsencrypt.org/getting-started/

	### The following two commented lines are for reference and hint at where
	### the certbot puts the created certs. N.B. These are symlinks.
	#ssl_certificate /etc/letsencrypt/live/${SSL_CERT_DOMAIN}/fullchain.pem;
	#ssl_certificate_key /etc/letsencrypt/live/${SSL_CERT_DOMAIN}/privkey.pem;

	ssl_certificate ${SSL_CERT};
	ssl_certificate_key ${SSL_CERT_KEY};

	### for more information/explanation regarding the TLS configuration below, see:
	### https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-in-ubuntu-16-04

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_ecdh_curve secp384r1;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;
        ${STRICT_TRANSPORT_SECURITY_DIRECTIVE}
	#add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	ssl_dhparam /etc/ssl/certs/dhparam.pem;

	location = /auth {
		proxy_pass http://auth/admin/auth;
		proxy_pass_request_body off;
		proxy_set_header Content-Length "";
		proxy_set_header X-Original-URI ${DOLLAR}request_uri;
	}
	location /api {
		auth_request /auth;
		proxy_pass http://api;
        	proxy_set_header X-Original-Host ${DOLLAR}host;
        	proxy_set_header X-Original-Protocol https;
	}
	location / {
		auth_request /auth;
		rewrite ^ /index.html break;
	}
        location /src/ {
		auth_request /auth;
	}
	location /images/ {
		auth_request /auth;
	}
	location /bower_components/ {
		auth_request /auth;
	}
	location /admin {
		proxy_pass http://auth;
		proxy_set_header X-Original-URI ${DOLLAR}http_x_original_uri;
	}

	error_page 401 = @error401;
	location @error401 {
		add_header X-Original-URI ${DOLLAR}request_uri;
		return 302 /admin/login;
	}

    }

}
